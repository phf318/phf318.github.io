<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>318&#39;s Blog</title>
  <icon>https://www.gravatar.com/avatar/d94af267dd5df2cb03cbc39ba3dd04c2</icon>
  <subtitle>来人间一趟，总要见见太阳</subtitle>
  <link href="http://phf318.github.io/atom.xml" rel="self"/>
  
  <link href="http://phf318.github.io/"/>
  <updated>2021-03-12T16:14:12.228Z</updated>
  <id>http://phf318.github.io/</id>
  
  <author>
    <name>318</name>
    <email>2956705907@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hgame2021_re部分wp</title>
    <link href="http://phf318.github.io/2021/03/13/hgame2021-re%E9%83%A8%E5%88%86wp/"/>
    <id>http://phf318.github.io/2021/03/13/hgame2021-re%E9%83%A8%E5%88%86wp/</id>
    <published>2021-03-12T16:07:47.000Z</published>
    <updated>2021-03-12T16:14:12.228Z</updated>
    
    <content type="html"><![CDATA[<h2 id="RE部分"><a href="#RE部分" class="headerlink" title="RE部分"></a>RE部分</h2><h2 id="Day-1-helloRe"><a href="#Day-1-helloRe" class="headerlink" title="Day 1 helloRe"></a>Day 1 helloRe</h2><p>第一天的第一道题~~这道题是真.签到题啊</p><p>进入ida，没有明显的main函数，F12查找字符串，看到input flag点进去<br><img src="https://img-blog.csdnimg.cn/20210207083123610.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUxMzU3NjU3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>发现主函数应该是sub_1400014C0<br><img src="https://img-blog.csdnimg.cn/20210207084118836.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUxMzU3NjU3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210207084217616.png" alt="在这里插入图片描述"><br>逻辑很简单，脚本也挺好写的<br><img src="https://img-blog.csdnimg.cn/20210207084640847.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUxMzU3NjU3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> memory[<span class="number">30</span>] = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> v6 = <span class="number">0x0FF</span>;</span><br><span class="line"><span class="keyword">char</span> asc_[<span class="number">23</span>] = <span class="string">&quot;棛湋瀬憹洑毇仐畝儚攭櫁&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">23</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">memory[i] = asc_[i] ^ (v6--);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, memory);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Day-2-pypy"><a href="#Day-2-pypy" class="headerlink" title="Day 2 pypy"></a>Day 2 pypy</h2><p>第一次做python反汇编，好在题目比较友好，没有太复杂</p><p>照着类似题的wp和<a href="https://docs.python.org/zh-cn/3/library/dis.html">dis–python字节码反汇编</a>可以硬翻。。</p><p>下面写了注释的哦</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">0</span> LOAD_GLOBAL              <span class="number">0</span> (<span class="built_in">input</span>)</span><br><span class="line">              <span class="number">2</span> LOAD_CONST               <span class="number">1</span> (<span class="string">&#x27;give me your flag:\n&#x27;</span>)</span><br><span class="line">              <span class="number">4</span> CALL_FUNCTION            <span class="number">1</span></span><br><span class="line">              <span class="number">6</span> STORE_FAST               <span class="number">0</span> (raw_flag)</span><br><span class="line"></span><br><span class="line">  <span class="number">5</span>           <span class="number">8</span> LOAD_GLOBAL              <span class="number">1</span> (<span class="built_in">list</span>)</span><br><span class="line">             <span class="number">10</span> LOAD_FAST                <span class="number">0</span> (raw_flag)</span><br><span class="line">             <span class="number">12</span> LOAD_CONST               <span class="number">2</span> (<span class="number">6</span>)</span><br><span class="line">             <span class="number">14</span> LOAD_CONST               <span class="number">3</span> (-<span class="number">1</span>)</span><br><span class="line">             <span class="number">16</span> BUILD_SLICE              <span class="number">2</span>                    取raw_flag的第六位到倒数第一位</span><br><span class="line">             <span class="number">18</span> BINARY_SUBSCR                                 所以最后要包上hgame&#123;&#125;才是flag</span><br><span class="line">             <span class="number">20</span> CALL_FUNCTION            <span class="number">1</span></span><br><span class="line">             <span class="number">22</span> STORE_FAST               <span class="number">1</span> (cipher)</span><br><span class="line"></span><br><span class="line">  <span class="number">6</span>          <span class="number">24</span> LOAD_GLOBAL              <span class="number">2</span> (<span class="built_in">len</span>)</span><br><span class="line">             <span class="number">26</span> LOAD_FAST                <span class="number">1</span> (cipher)</span><br><span class="line">             <span class="number">28</span> CALL_FUNCTION            <span class="number">1</span>                      length=<span class="built_in">len</span>(cipher)</span><br><span class="line">             <span class="number">30</span> STORE_FAST               <span class="number">2</span> (length)</span><br><span class="line"></span><br><span class="line">  <span class="number">8</span>          <span class="number">32</span> LOAD_GLOBAL              <span class="number">3</span> (<span class="built_in">range</span>)</span><br><span class="line">             <span class="number">34</span> LOAD_FAST                <span class="number">2</span> (length)</span><br><span class="line">             <span class="number">36</span> LOAD_CONST               <span class="number">4</span> (<span class="number">2</span>)</span><br><span class="line">             <span class="number">38</span> BINARY_FLOOR_DIVIDE                           </span><br><span class="line"></span><br><span class="line">             <span class="number">40</span> CALL_FUNCTION            <span class="number">1</span></span><br><span class="line">             <span class="number">42</span> GET_ITER</span><br><span class="line">        &gt;&gt;   <span class="number">44</span> FOR_ITER                <span class="number">54</span> (to <span class="number">100</span>)</span><br><span class="line">             <span class="number">46</span> STORE_FAST               <span class="number">3</span> (i)</span><br><span class="line"></span><br><span class="line">  <span class="number">9</span>          <span class="number">48</span> LOAD_FAST                <span class="number">1</span> (cipher)</span><br><span class="line">             <span class="number">50</span> LOAD_CONST               <span class="number">4</span> (<span class="number">2</span>)</span><br><span class="line">             <span class="number">52</span> LOAD_FAST                <span class="number">3</span> (i)</span><br><span class="line">             <span class="number">54</span> BINARY_MULTIPLY</span><br><span class="line">             <span class="number">56</span> LOAD_CONST               <span class="number">5</span> (<span class="number">1</span>)</span><br><span class="line">             <span class="number">58</span> BINARY_ADD</span><br><span class="line">             <span class="number">60</span> BINARY_SUBSCR                                   cipher[2i+<span class="number">1</span>]</span><br><span class="line">             <span class="number">62</span> LOAD_FAST                <span class="number">1</span> (cipher)</span><br><span class="line">             <span class="number">64</span> LOAD_CONST               <span class="number">4</span> (<span class="number">2</span>)</span><br><span class="line">             <span class="number">66</span> LOAD_FAST                <span class="number">3</span> (i)</span><br><span class="line">             <span class="number">68</span> BINARY_MULTIPLY</span><br><span class="line">             <span class="number">70</span> BINARY_SUBSCR                                   cipher[2i]</span><br><span class="line">             <span class="number">72</span> ROT_TWO</span><br><span class="line">             <span class="number">74</span> LOAD_FAST                <span class="number">1</span> (cipher)</span><br><span class="line">             <span class="number">76</span> LOAD_CONST               <span class="number">4</span> (<span class="number">2</span>)</span><br><span class="line">             <span class="number">78</span> LOAD_FAST                <span class="number">3</span> (i)</span><br><span class="line">             <span class="number">80</span> BINARY_MULTIPLY</span><br><span class="line">             <span class="number">82</span> STORE_SUBSCR</span><br><span class="line">             <span class="number">84</span> LOAD_FAST                <span class="number">1</span> (cipher)</span><br><span class="line">             <span class="number">86</span> LOAD_CONST               <span class="number">4</span> (<span class="number">2</span>)</span><br><span class="line">             <span class="number">88</span> LOAD_FAST                <span class="number">3</span> (i)</span><br><span class="line">             <span class="number">90</span> BINARY_MULTIPLY</span><br><span class="line">             <span class="number">92</span> LOAD_CONST               <span class="number">5</span> (<span class="number">1</span>)</span><br><span class="line">             <span class="number">94</span> BINARY_ADD</span><br><span class="line">             <span class="number">96</span> STORE_SUBSCR                             这一段就是x,y=y,x</span><br><span class="line">             <span class="number">98</span> JUMP_ABSOLUTE           <span class="number">44</span>               交换了cipher[2i+<span class="number">1</span>]和cipher[2i]</span><br><span class="line"></span><br><span class="line"> <span class="number">12</span>     &gt;&gt;  <span class="number">100</span> BUILD_LIST               <span class="number">0</span></span><br><span class="line">            <span class="number">102</span> STORE_FAST               <span class="number">4</span> (res)         <span class="comment">#创建一个list</span></span><br><span class="line"></span><br><span class="line"> <span class="number">13</span>         <span class="number">104</span> LOAD_GLOBAL              <span class="number">3</span> (<span class="built_in">range</span>)</span><br><span class="line">            <span class="number">106</span> LOAD_FAST                <span class="number">2</span> (length)</span><br><span class="line">            <span class="number">108</span> CALL_FUNCTION            <span class="number">1</span></span><br><span class="line">            <span class="number">110</span> GET_ITER</span><br><span class="line">        &gt;&gt;  <span class="number">112</span> FOR_ITER                <span class="number">26</span> (to <span class="number">140</span>)</span><br><span class="line">            <span class="number">114</span> STORE_FAST               <span class="number">3</span> (i)</span><br><span class="line"></span><br><span class="line"> <span class="number">14</span>         <span class="number">116</span> LOAD_FAST                <span class="number">4</span> (res)</span><br><span class="line">            <span class="number">118</span> LOAD_METHOD              <span class="number">4</span> (append)</span><br><span class="line">            <span class="number">120</span> LOAD_GLOBAL              <span class="number">5</span> (<span class="built_in">ord</span>)</span><br><span class="line">            <span class="number">122</span> LOAD_FAST                <span class="number">1</span> (cipher)</span><br><span class="line">            <span class="number">124</span> LOAD_FAST                <span class="number">3</span> (i)</span><br><span class="line">            <span class="number">126</span> BINARY_SUBSCR</span><br><span class="line">            <span class="number">128</span> CALL_FUNCTION            <span class="number">1</span></span><br><span class="line">            <span class="number">130</span> LOAD_FAST                <span class="number">3</span> (i)</span><br><span class="line">            <span class="number">132</span> BINARY_XOR                                res.append(<span class="built_in">ord</span>(cipher[i])^i)</span><br><span class="line">            <span class="number">134</span> CALL_METHOD              <span class="number">1</span></span><br><span class="line">            <span class="number">136</span> POP_TOP</span><br><span class="line">            <span class="number">138</span> JUMP_ABSOLUTE          <span class="number">112</span></span><br><span class="line"></span><br><span class="line"> <span class="number">15</span>     &gt;&gt;  <span class="number">140</span> LOAD_GLOBAL              <span class="number">6</span> (<span class="built_in">bytes</span>)</span><br><span class="line">            <span class="number">142</span> LOAD_FAST                <span class="number">4</span> (res)</span><br><span class="line">            <span class="number">144</span> CALL_FUNCTION            <span class="number">1</span></span><br><span class="line">            <span class="number">146</span> LOAD_METHOD              <span class="number">7</span> (<span class="built_in">hex</span>)</span><br><span class="line">            <span class="number">148</span> CALL_METHOD              <span class="number">0</span></span><br><span class="line">            <span class="number">150</span> STORE_FAST               <span class="number">4</span> (res)         把res里的数据转成<span class="number">16</span>进制</span><br><span class="line"></span><br><span class="line"> <span class="number">16</span>         <span class="number">152</span> LOAD_GLOBAL              <span class="number">8</span> (<span class="built_in">print</span>)</span><br><span class="line">            <span class="number">154</span> LOAD_CONST               <span class="number">6</span> (<span class="string">&#x27;your flag: &#x27;</span>)</span><br><span class="line">            <span class="number">156</span> LOAD_FAST                <span class="number">4</span> (res)</span><br><span class="line">            <span class="number">158</span> BINARY_ADD                                            <span class="comment">#输出res</span></span><br><span class="line">            <span class="number">160</span> CALL_FUNCTION            <span class="number">1</span></span><br><span class="line">            <span class="number">162</span> POP_TOP</span><br><span class="line">            <span class="number">164</span> LOAD_CONST               <span class="number">0</span> (<span class="literal">None</span>)</span><br><span class="line">            <span class="number">166</span> RETURN_VALUE</span><br><span class="line"></span><br><span class="line"><span class="comment"># your flag: 30466633346f59213b4139794520572b45514d61583151576638643a</span></span><br></pre></td></tr></table></figure><p>其实就几行代码，因本废物只能看懂一点python但不会写，所以还是用的C++写脚本</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cipher[<span class="number">28</span>] = &#123; <span class="number">0x30</span>,<span class="number">0x46</span>,<span class="number">0x66</span>,<span class="number">0x33</span>,<span class="number">0x34</span>,<span class="number">0x6f</span>,<span class="number">0x59</span>,<span class="number">0x21</span>,<span class="number">0x3b</span>,<span class="number">0x41</span>,<span class="number">0x39</span>,<span class="number">0x79</span>,<span class="number">0x45</span>,<span class="number">0x20</span>,</span><br><span class="line">        <span class="number">0x57</span>,<span class="number">0x2b</span>,<span class="number">0x45</span>,<span class="number">0x51</span>,<span class="number">0x4d</span>,<span class="number">0x61</span>,<span class="number">0x58</span>,<span class="number">0x31</span>,<span class="number">0x51</span>,<span class="number">0x57</span>,<span class="number">0x66</span>,<span class="number">0x38</span>,<span class="number">0x64</span>,<span class="number">0x3a</span> &#125;;</span><br><span class="line">    <span class="keyword">int</span> raw_flag[<span class="number">20</span>] = &#123; &#125;;</span><br><span class="line">    <span class="keyword">char</span> flag1[<span class="number">28</span>] = &#123;&#125;;</span><br><span class="line">    <span class="comment">//char temp;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">28</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        flag1[i] = <span class="keyword">char</span>(cipher[i] ^ i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">17</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        swap(flag1[<span class="number">2</span> * i], flag1[<span class="number">2</span> * i + <span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">28</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, flag1[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210207091206338.png" alt="在这里插入图片描述"><br>hgame{}包上，提交~（讲真这个flag有点，，不好看，我一直以为自己哪里写错了还</p><h2 id="Day-3-apacha"><a href="#Day-3-apacha" class="headerlink" title="Day 3 apacha"></a>Day 3 apacha</h2><p>压轴，对于我这种废物小白，这道题确实有一丢丢难</p><p>其实就是个xxtea加密，但也是看了好多篇wp加之超级可爱的学长的帮助下才做完的<br><img src="https://img-blog.csdnimg.cn/20210207094931833.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUxMzU3NjU3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>再把dword_5020里的数据转换成16进制数<br><img src="https://img-blog.csdnimg.cn/20210207094049178.png" alt="在这里插入图片描述"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">hex</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint32_t</span> v[] = &#123; <span class="number">35</span>, <span class="number">179</span>,  <span class="number">78</span>, <span class="number">231</span>,  <span class="number">54</span>,  <span class="number">40</span>, <span class="number">167</span>, <span class="number">183</span>, <span class="number">226</span>, <span class="number">111</span>,</span><br><span class="line">  <span class="number">202</span>,  <span class="number">89</span>, <span class="number">193</span>, <span class="number">197</span>, <span class="number">124</span>, <span class="number">150</span>, <span class="number">116</span>,  <span class="number">38</span>, <span class="number">128</span>, <span class="number">231</span>,</span><br><span class="line">  <span class="number">230</span>,  <span class="number">84</span>,  <span class="number">45</span>,  <span class="number">61</span>,  <span class="number">86</span>,   <span class="number">3</span>, <span class="number">157</span>, <span class="number">138</span>, <span class="number">156</span>, <span class="number">195</span>,</span><br><span class="line">  <span class="number">220</span>, <span class="number">153</span>, <span class="number">237</span>, <span class="number">216</span>,  <span class="number">38</span>, <span class="number">112</span>, <span class="number">173</span>, <span class="number">253</span>,  <span class="number">51</span>, <span class="number">106</span>,</span><br><span class="line">   <span class="number">10</span>,  <span class="number">85</span>, <span class="number">150</span>, <span class="number">244</span>, <span class="number">158</span>, <span class="number">111</span>, <span class="number">156</span>,  <span class="number">92</span>,  <span class="number">76</span>, <span class="number">208</span>,</span><br><span class="line">  <span class="number">229</span>,  <span class="number">27</span>,  <span class="number">23</span>, <span class="number">174</span>,  <span class="number">35</span>, <span class="number">103</span>, <span class="number">194</span>, <span class="number">165</span>, <span class="number">112</span>,  <span class="number">82</span>,</span><br><span class="line">   <span class="number">10</span>,  <span class="number">19</span>,  <span class="number">66</span>, <span class="number">172</span>, <span class="number">178</span>, <span class="number">103</span>, <span class="number">190</span>, <span class="number">132</span>, <span class="number">121</span>, <span class="number">199</span>,</span><br><span class="line">   <span class="number">92</span>, <span class="number">112</span>, <span class="number">152</span>,  <span class="number">61</span>,  <span class="number">81</span>,  <span class="number">92</span>,  <span class="number">45</span>, <span class="number">218</span>,  <span class="number">54</span>, <span class="number">251</span>,</span><br><span class="line">   <span class="number">69</span>, <span class="number">150</span>,  <span class="number">23</span>,  <span class="number">34</span>, <span class="number">157</span>,  <span class="number">82</span>, <span class="number">227</span>,  <span class="number">92</span>, <span class="number">251</span>, <span class="number">225</span>,</span><br><span class="line">  <span class="number">137</span>, <span class="number">209</span>, <span class="number">137</span>, <span class="number">212</span>,  <span class="number">91</span>, <span class="number">232</span>,  <span class="number">31</span>, <span class="number">209</span>, <span class="number">200</span>, <span class="number">115</span>,</span><br><span class="line">  <span class="number">150</span>, <span class="number">193</span>, <span class="number">181</span>,  <span class="number">84</span>, <span class="number">144</span>, <span class="number">180</span>, <span class="number">124</span>, <span class="number">182</span>, <span class="number">202</span>, <span class="number">228</span>,</span><br><span class="line">   <span class="number">23</span>,  <span class="number">33</span>, <span class="number">148</span>, <span class="number">249</span>, <span class="number">227</span>, <span class="number">157</span>, <span class="number">170</span>, <span class="number">161</span>,  <span class="number">90</span>,  <span class="number">47</span>,</span><br><span class="line">  <span class="number">253</span>,   <span class="number">1</span>, <span class="number">232</span>, <span class="number">167</span>, <span class="number">171</span>, <span class="number">110</span>,  <span class="number">13</span>, <span class="number">195</span>, <span class="number">156</span>, <span class="number">220</span>,</span><br><span class="line">  <span class="number">173</span>,  <span class="number">27</span>,  <span class="number">74</span>, <span class="number">176</span>,  <span class="number">83</span>,  <span class="number">52</span>, <span class="number">249</span>,   <span class="number">6</span>, <span class="number">164</span>, <span class="number">146</span>, &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">35</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;0x&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i * <span class="number">4</span> - <span class="number">1</span>; j &gt; (i - <span class="number">1</span>) * <span class="number">4</span> - <span class="number">1</span>; j--)</span><br><span class="line">            <span class="keyword">if</span> (v[j] &lt; <span class="number">16</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;0%x&quot;</span>, v[j]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%x&quot;</span>, v[j]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;, &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对了，密钥的位置传入的是&amp;v6，所以密钥就是1，2，3，4<br><img src="https://img-blog.csdnimg.cn/20210207095212210.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUxMzU3NjU3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>上网搜解密脚本套用即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DELTA 0x9e3779b9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MX (((z&gt;&gt;5^y<span class="meta-string">&lt;&lt;2) + (y&gt;&gt;3^z&lt;&lt;4)) ^ ((sum^y) + (key[(p&amp;3)^e] ^ z)))</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">uint32_t</span> v3[] = &#123; <span class="number">0xe74eb323</span>, <span class="number">0xb7a72836</span>, <span class="number">0x59ca6fe2</span>, <span class="number">0x967cc5c1</span>, <span class="number">0xe7802674</span>, </span><br><span class="line"><span class="number">0x3d2d54e6</span>, <span class="number">0x8a9d0356</span>,<span class="number">0x99dcc39c</span>, <span class="number">0x7026d8ed</span>, <span class="number">0x6a33fdad</span>, <span class="number">0xf496550a</span>, <span class="number">0x5c9c6f9e</span>,</span><br><span class="line"><span class="number">0x1be5d04c</span>, <span class="number">0x6723ae17</span>, <span class="number">0x5270a5c2</span>, <span class="number">0xac42130a</span>, </span><br><span class="line"><span class="number">0x84be67b2</span>, <span class="number">0x705cc779</span>, <span class="number">0x5c513d98</span>, <span class="number">0xfb36da2d</span>, <span class="number">0x22179645</span>, <span class="number">0x5ce3529d</span>, <span class="number">0xd189e1fb</span>, </span><br><span class="line"><span class="number">0xe85bd489</span>, <span class="number">0x73c8d11f</span>,</span><br><span class="line"><span class="number">0x54b5c196</span>, <span class="number">0xb67cb490</span>, <span class="number">0x2117e4ca</span>, <span class="number">0x9de3f994</span>, <span class="number">0x2f5aa1aa</span>, <span class="number">0xa7e801fd</span>, <span class="number">0xc30d6eab</span>, </span><br><span class="line"><span class="number">0x1baddc9c</span>, <span class="number">0x3453b04a</span>, <span class="number">0x92a406f9</span>, &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">btea</span><span class="params">(<span class="keyword">uint32_t</span>* v, <span class="keyword">int</span> n, <span class="keyword">uint32_t</span> <span class="keyword">const</span> key[<span class="number">4</span>])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint32_t</span> y, z, sum;</span><br><span class="line">    <span class="keyword">unsigned</span> p, rounds, e;</span><br><span class="line">    <span class="keyword">if</span> (n &gt; <span class="number">1</span>)            <span class="comment">/* Coding Part */</span></span><br><span class="line">    &#123;</span><br><span class="line">        rounds = <span class="number">3</span>;</span><br><span class="line">        sum = <span class="number">0</span>;</span><br><span class="line">        z = v[n - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            sum += DELTA;</span><br><span class="line">            e = (sum &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">for</span> (p = <span class="number">0</span>; p &lt; n - <span class="number">1</span>; p++)</span><br><span class="line">            &#123;</span><br><span class="line">                y = v[p + <span class="number">1</span>];</span><br><span class="line">                z = v[p] += MX;</span><br><span class="line">            &#125;</span><br><span class="line">            y = v[<span class="number">0</span>];</span><br><span class="line">            z = v[n - <span class="number">1</span>] += MX;</span><br><span class="line">        &#125; <span class="keyword">while</span> (--rounds);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (n &lt; <span class="number">-1</span>)      <span class="comment">/* Decoding Part */</span></span><br><span class="line">    &#123;</span><br><span class="line">        n = -n;</span><br><span class="line">        rounds = <span class="number">6</span> + <span class="number">52</span> / n;</span><br><span class="line">        sum = rounds * DELTA;</span><br><span class="line">        y = v[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            e = (sum &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">for</span> (p = n - <span class="number">1</span>; p &gt; <span class="number">0</span>; p--)</span><br><span class="line">            &#123;</span><br><span class="line">                z = v[p - <span class="number">1</span>];</span><br><span class="line">                y = v[p] -= MX;</span><br><span class="line">            &#125;</span><br><span class="line">            z = v[n - <span class="number">1</span>];</span><br><span class="line">            y = v[<span class="number">0</span>] -= MX;</span><br><span class="line">            sum -= DELTA;</span><br><span class="line">        &#125; <span class="keyword">while</span> (--rounds);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">uint32_t</span> <span class="keyword">const</span> k[<span class="number">4</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span> &#125;;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">35</span>; <span class="comment">//n的绝对值表示v的长度，取正表示加密，取负表示解密</span></span><br><span class="line">    <span class="comment">// v为要加密的数据是两个32位无符号整数</span></span><br><span class="line">    <span class="comment">// k为加密解密密钥，为4个32位无符号整数，即密钥长度为128位</span></span><br><span class="line">    <span class="comment">//printf(&quot;加密前原始数据：%u %u\n&quot;, v[0], v[1]);</span></span><br><span class="line">    <span class="comment">//btea(v, n, k);</span></span><br><span class="line">   <span class="comment">// printf(&quot;加密后的数据：%u %u\n&quot;, v[0], v[1]);</span></span><br><span class="line">   btea(v3, -n, k);</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">35</span>; i++)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, v3[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210207095500515.png" alt="在这里插入图片描述"></p><h2 id="WEEK-2"><a href="#WEEK-2" class="headerlink" title="WEEK 2"></a>WEEK 2</h2><h2 id="Day-1-fake-debugger"><a href="#Day-1-fake-debugger" class="headerlink" title="Day 1  fake_debugger"></a>Day 1  fake_debugger</h2><p>这道题原理不难，就是题目出得。。。比较新颖？<br><img src="https://img-blog.csdnimg.cn/20210312232935472.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUxMzU3NjU3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>大致就是把我们的输入和第一步ebx中存储的值进行某种运算，得到的值跟下一步中ebx的值比较，相等继续不相等报错</p><p>用开头hgame来看它做的是什么运算，h (104)和 23 和 127.。。。<br>盲猜异或，诶~对了，出题师傅真友好！（而且众所周知异或是可逆的。。</p><p>那接下来神仙可以写脚本爆破了，我这种废物只能一步步用给出的两个值推<br>例如,第二位就是</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">74</span>^<span class="number">45</span>=<span class="number">103</span>   <span class="comment">//g</span></span><br></pre></td></tr></table></figure><p>顺便用我少得可怜python知识。。。给自己写个打空格的脚本。。。<br>（每次回来加一位flag，然后改变空格数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">p=remote(<span class="string">&quot;101.132.177.131&quot;</span>,<span class="number">9999</span>)</span><br><span class="line"></span><br><span class="line">a=<span class="string">&#x27;aaaaaa&#x27;</span></span><br><span class="line"></span><br><span class="line">payload=<span class="string">&#x27;hgame&#123;You_Kn0w_debuG&#x27;</span>+a</span><br><span class="line"></span><br><span class="line">p.sendline(payload)</span><br><span class="line"></span><br><span class="line">p.recvuntil(<span class="string">&quot;OK,let&#x27;s debug it! You can &#x27;Step&#x27; by &#x27;Space&#x27;!&quot;</span>)</span><br><span class="line"></span><br><span class="line">space=(<span class="string">&#x27; &#x27;</span>+<span class="string">&#x27;\n&#x27;</span>)*<span class="number">0x29</span></span><br><span class="line"></span><br><span class="line">p.sendline(space)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><p>不得不说这方法很笨。。。但。。我是废物（心安理得</p><h2 id="Day-2-helloRE-2"><a href="#Day-2-helloRE-2" class="headerlink" title="Day 2     helloRE 2"></a>Day 2     helloRE 2</h2><p>第一部分的password<br>可以断在cmp比较的地方，直接是明文<br><img src="https://img-blog.csdnimg.cn/20210312235613330.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUxMzU3NjU3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后我就被一堆一堆的函数搞蒙了<br>看了大佬的wp知道了是AES加密</p><p>第一部分的输入按位与1-15异或后传入password2进程，作密钥<br>（也可以理解为iv是1-15.。。。。<br><img src="https://img-blog.csdnimg.cn/20210312235921495.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUxMzU3NjU3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>好心的学长给了脚本来着<br><img src="https://img-blog.csdnimg.cn/20210313000341263.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUxMzU3NjU3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    
    <summary type="html">第一次参加hgame，只做了第一周和第二周的题。。不过怎么说也是我第一次认真地做比赛（招新赛。。）中的re，还是写个wp纪念一下</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>010_Editor_v11.0_破解</title>
    <link href="http://phf318.github.io/2021/03/11/010-Editor-v11-0-%E7%A0%B4%E8%A7%A3/"/>
    <id>http://phf318.github.io/2021/03/11/010-Editor-v11-0-%E7%A0%B4%E8%A7%A3/</id>
    <published>2021-03-11T12:27:48.000Z</published>
    <updated>2021-03-17T15:48:06.809Z</updated>
    
    <content type="html"><![CDATA[<p>打开010 Editor, 输入用户名和密码，会弹出你输入的是无效注册码的警告框<br><img src="https://img-blog.csdnimg.cn/20210211160923882.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUxMzU3NjU3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>于是载入程序后，进入strings窗口，Ctrl+F 搜索字符串 invalid license可定位到主要函数<br><img src="https://img-blog.csdnimg.cn/2021021116122375.png" alt="在这里插入图片描述"><br>找到主要函数 sub_1401E2660，进入函数<br><img src="https://img-blog.csdnimg.cn/20210211161302298.png" alt="在这里插入图片描述"><br>看函数逻辑挺复杂的，但发现关键字“Thank you for purchasing….”应该是成功的标志<br><img src="https://img-blog.csdnimg.cn/20210211164119864.png" alt="在这里插入图片描述"></p><p>大致了解逻辑，初步判断最关键的是在橙色框标注的两个jnz跳转<br>（建议小伙伴们一定要自己看一遍，实地考察。。。）<br><img src="https://img-blog.csdnimg.cn/20210211162003834.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUxMzU3NjU3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>现在动态调试，以确定如何才能成功走到”Thank you for purchasing….”</p><p>在第一个橙框跳转处下断点，第一步让它跳转，把ZF标志位改为0，第二处不让它跳转，把ZF标志位改为1，（其余地方一直F8步过。。。）<br><img src="https://img-blog.csdnimg.cn/20210211163044632.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUxMzU3NjU3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>修改完后运行，发现成功绕过，点击OK后就进入正常界面，好耶！<br><img src="https://img-blog.csdnimg.cn/20210211163315320.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUxMzU3NjU3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>所以就是只要绕过两处跳转即可，已知jnz和jz两种跳转的条件刚好相反，考虑把两处jnz跳转都改成jz跳转！！</p><p>但发现用KeyPatch好像不行呜呜呜<br><img src="https://img-blog.csdnimg.cn/20210211163618146.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUxMzU3NjU3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>搜了一下发现要改机器码。。。长见识了！!<br><img src="https://img-blog.csdnimg.cn/20210211163818548.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUxMzU3NjU3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>jnz改成jz跳转： 首位如果是75，改成74 ； 如果是0F  85改成0F  84即可</p><p>改完以后Apply patches，再次打开010Editor，随便输入注册码<br><img src="https://img-blog.csdnimg.cn/20210211164221379.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUxMzU3NjU3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>成功！！！</p><p>以上就是v11.0版64位的010 Editor破解过程啦~~</p><p>还是 ida  yyds ！！</p>]]></content>
    
    
    <summary type="html">前两天做hgame的时候发现010editor过期了，花五十美元买它？那是不可能的，想搜个破解版下载，结果搜到的都是破解教程，不过大多教程都用的od，od界面太不好看了，就自己用ida试了试~</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>re_做题记录(持更)</title>
    <link href="http://phf318.github.io/2021/03/11/re-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <id>http://phf318.github.io/2021/03/11/re-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/</id>
    <published>2021-03-11T12:21:35.000Z</published>
    <updated>2021-03-17T15:47:24.999Z</updated>
    
    <content type="html"><![CDATA[<p>本人新手，比较废物，如果有不对的地方还请多多包涵~</p><h2 id="BJD-hamburger"><a href="#BJD-hamburger" class="headerlink" title="BJD hamburger"></a><a href="https://blog.csdn.net/m0_51357657/article/details/114954357">BJD hamburger</a></h2><p>第一次做到一道unity小游戏的题，用的dnSpy</p><h2 id="攻防世界-easyhook"><a href="#攻防世界-easyhook" class="headerlink" title="攻防世界  easyhook"></a><a href="https://blog.csdn.net/m0_51357657/article/details/114857301">攻防世界  easyhook</a></h2><p>攻防世界上的动调题都好好玩啊~~</p><h2 id="buu-相册"><a href="#buu-相册" class="headerlink" title="buu 相册"></a><a href="https://blog.csdn.net/m0_51357657/article/details/114954357">buu 相册</a></h2><p>勉勉强强做下来的一道安卓逆向。。。是真的不会呜呜</p><h2 id="XCTF-secret-galaxy-300"><a href="#XCTF-secret-galaxy-300" class="headerlink" title="XCTF secret-galaxy-300"></a><a href="https://blog.csdn.net/m0_51357657/article/details/114605784">XCTF secret-galaxy-300</a></h2><p>一道挺好的动调题</p><h2 id="buu-BJDCTF2020easy"><a href="#buu-BJDCTF2020easy" class="headerlink" title="buu  BJDCTF2020easy"></a><a href="https://blog.csdn.net/m0_51357657/article/details/113098318">buu  BJDCTF2020easy</a></h2><p>更改call 指令，直接打印flag，挺有趣的一道题</p><h2 id="GWCTF-2019-xxor"><a href="#GWCTF-2019-xxor" class="headerlink" title="[GWCTF 2019] xxor"></a><a href="https://blog.csdn.net/m0_51357657/article/details/113419426">[GWCTF 2019] xxor</a></h2><p>低配版xxtea，要自己写脚本</p><h2 id="HDCTF2019-maze"><a href="#HDCTF2019-maze" class="headerlink" title="[HDCTF2019] maze"></a><a href="https://blog.csdn.net/m0_51357657/article/details/114082283">[HDCTF2019] maze</a></h2><p>虽说是个迷宫，其实是个花指令修复的题，挺好的</p><h2 id="FlareOn4-IgniteMe"><a href="#FlareOn4-IgniteMe" class="headerlink" title="[FlareOn4] IgniteMe"></a><a href="https://blog.csdn.net/m0_51357657/article/details/114082283">[FlareOn4] IgniteMe</a></h2><p>动调+按位异或</p><h2 id="ACTF-usualcrypto"><a href="#ACTF-usualcrypto" class="headerlink" title="[ACTF ] usualcrypto"></a><a href="https://blog.csdn.net/m0_51357657/article/details/113419426">[ACTF ] usualcrypto</a></h2><p>换表base64，动调得表</p><h2 id="GXYCTF-2019-luck-guy"><a href="#GXYCTF-2019-luck-guy" class="headerlink" title="[GXYCTF 2019] luck_guy"></a><a href="https://blog.csdn.net/m0_51357657/article/details/113419426">[GXYCTF 2019] luck_guy</a></h2><p>难度一般，看懂逻辑就好</p><h2 id="WUSTCTF2020-level3"><a href="#WUSTCTF2020-level3" class="headerlink" title="[WUSTCTF2020] level3"></a><a href="https://blog.csdn.net/m0_51357657/article/details/114087149">[WUSTCTF2020] level3</a></h2><p>换表base64</p><h2 id="GWCTF-2019-pyre"><a href="#GWCTF-2019-pyre" class="headerlink" title="[GWCTF 2019] pyre"></a><a href="https://blog.csdn.net/m0_51357657/article/details/114266003">[GWCTF 2019] pyre</a></h2><p>用到了python的uncompyle插件</p><h2 id="buu-rsa"><a href="#buu-rsa" class="headerlink" title="buu rsa"></a><a href="https://blog.csdn.net/m0_51357657/article/details/114266003">buu rsa</a></h2><p>给了公钥，用Crypto 和 gmpy2 解私钥 </p><h2 id="MRCTF2020-Transform"><a href="#MRCTF2020-Transform" class="headerlink" title="[MRCTF2020] Transform"></a><a href="https://blog.csdn.net/m0_51357657/article/details/114087149">[MRCTF2020] Transform</a></h2><p>异或+换位</p><h2 id="刮开有奖"><a href="#刮开有奖" class="headerlink" title="刮开有奖"></a><a href="https://blog.csdn.net/m0_51357657/article/details/114087149">刮开有奖</a></h2><p>一道。。很麻烦的题</p><h2 id="buu-findit"><a href="#buu-findit" class="headerlink" title="buu  findit"></a><a href="https://blog.csdn.net/m0_51357657/article/details/114417890">buu  findit</a></h2><p>水题，APKIDE+凯撒移位</p><h2 id="ACTF-2020-easyre"><a href="#ACTF-2020-easyre" class="headerlink" title=" [ACTF 2020] easyre"></a><a href="https://blog.csdn.net/m0_51357657/article/details/114417890"> [ACTF 2020] easyre</a></h2><p>脱壳+移位运算</p><h2 id="ACTF-2020-Oruga"><a href="#ACTF-2020-Oruga" class="headerlink" title=" [ACTF 2020]  Oruga"></a><a href="https://blog.csdn.net/m0_51357657/article/details/114417890"> [ACTF 2020]  Oruga</a></h2><p>一道很麻烦的迷宫题。。。</p><h2 id="简单注册器"><a href="#简单注册器" class="headerlink" title=" 简单注册器"></a><a href="https://blog.csdn.net/m0_51357657/article/details/114417890"> 简单注册器</a></h2><p>水题，用jeb</p>]]></content>
    
    
    <summary type="html">本人新手，比较废物，如果有不对的地方还请多多包涵~</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://phf318.github.io/2021/02/12/hello-world/"/>
    <id>http://phf318.github.io/2021/02/12/hello-world/</id>
    <published>2021-02-11T16:30:35.750Z</published>
    <updated>2021-02-11T16:30:35.750Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
